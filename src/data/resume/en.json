{
  "about": {
    "bio": "With 8 years of frontend development experience and 4 years of team management experience, I specialize in enterprise application architecture design and engineering process optimization. I've led the development and refactoring of over 10 major backend management systems. As a team leader for 3-5 frontend developers, I'm responsible for technology selection, code quality control, and team technical training, improving team development efficiency by 40%. I drive frontend technology stack upgrades and standardization, excel at building highly reusable component libraries and toolchains, ensuring project delivery efficiency and maintainability.",
    "stats": {
      "yearsExperience": 8,
      "projectsCompleted": 20,
      "happyClients": 15
    }
  },
  "skills": {
    "categories": [
      {
        "id": 1,
        "name": "Frontend Fundamentals",
        "icon": "Code",
        "skills": [
          { 
            "name": "JavaScript/TypeScript", 
            "level": "Expert",
            "description": "Proficient in JavaScript (ES6+), CSS3, and HTML5, familiar with TypeScript for improved code quality and maintainability",
            "percentage": 95,
            "keywords": ["ES6+", "TypeScript", "HTML5", "CSS3"]
          },
          { 
            "name": "React Ecosystem", 
            "level": "Expert",
            "description": "Mastery of React and its ecosystem, including Hooks, Redux, React Router, and more for building high-performance applications",
            "percentage": 90,
            "keywords": ["React", "Hooks", "Redux", "React Router"]
          },
          { 
            "name": "Vue Ecosystem", 
            "level": "Expert",
            "description": "Deep experience with Vue.js (2.x and 3.x) and related technologies including Vuex, Vue Router, and Composition API",
            "percentage": 88,
            "keywords": ["Vue", "Vuex", "Vue Router", "Composition API"]
          },
          { 
            "name": "Performance & Networking", 
            "level": "Advanced",
            "description": "Deep understanding of HTTP/2, browser rendering mechanisms, V8 engine optimization, and network security; skilled in applying various performance optimization techniques",
            "percentage": 85,
            "keywords": ["HTTP/2", "Browser Rendering", "V8 Engine", "Network Security"]
          },
          { 
            "name": "UI Style Management", 
            "level": "Expert",
            "description": "Mastery of Tailwind CSS for efficient style management",
            "percentage": 90,
            "keywords": ["Tailwind CSS", "Responsive Design"]
          }
        ]
      },
      {
        "id": 2,
        "name": "Engineering Systems",
        "icon": "Zap",
        "skills": [
          { 
            "name": "Build Tools", 
            "level": "Advanced",
            "description": "Expert in Webpack, Vite, Rollup, esbuild, and Tsup, with extensive experience in modularization and build optimization",
            "percentage": 85,
            "keywords": ["Webpack", "Vite", "Rollup", "esbuild", "Tsup"]
          },
          { 
            "name": "Engineering Ecosystem", 
            "level": "Expert",
            "description": "Familiar with UMI, Dumi, and Father build toolchains, expert in ESLint for code quality standardization, proficient with Vitest for unit testing",
            "percentage": 90,
            "keywords": ["UMI", "Dumi", "Father", "ESLint", "Vitest"]
          },
          { 
            "name": "Large Project Management", 
            "level": "Advanced",
            "description": "Expert in Monorepo patterns for large project development",
            "percentage": 85,
            "keywords": ["Monorepo", "pnpm", "turborepo"]
          },
          { 
            "name": "CI/CD Automation", 
            "level": "Advanced",
            "description": "Designed and implemented CI/CD pipelines for frontend projects, including automated testing, building, deployment, and release processes, using GitHub Actions and Jenkins for full-process automation",
            "percentage": 85,
            "keywords": ["GitHub Actions", "Jenkins", "Docker", "Automated Testing"]
          },
          { 
            "name": "Micro-Frontend Architecture", 
            "level": "Advanced",
            "description": "Used micro-frontend frameworks like qiankun/micro-app to implement splitting and integration of large applications, solving multi-team collaboration and technology stack mixing issues",
            "percentage": 80,
            "keywords": ["Micro-Frontend", "qiankun", "Module Federation", "Application Integration"]
          }
        ]
      },
      {
        "id": 3,
        "name": "Advanced Technology Practice",
        "icon": "BrainCircuit",
        "skills": [
          { 
            "name": "Data Visualization", 
            "level": "Advanced",
            "description": "Experienced with ECharts and Pixi.js for complex data visualization",
            "percentage": 85,
            "keywords": ["ECharts", "Pixi.js", "Data Visualization"]
          },
          { 
            "name": "Server-side Rendering", 
            "level": "Advanced",
            "description": "Familiar with Next.js for server-side rendering and static site generation",
            "percentage": 80,
            "keywords": ["Next.js", "SSR", "Static Site Generation"]
          },
          { 
            "name": "Cross-platform Development", 
            "level": "Proficient",
            "description": "Using React Native and Electron to develop cross-platform applications, bridging web, mobile, and desktop development workflows",
            "percentage": 75,
            "keywords": ["React Native", "Electron", "Cross-platform", "Tauri"]
          },
          { 
            "name": "Web 3D and WebGL", 
            "level": "Proficient",
            "description": "Implemented 3D visualization and interactive effects using Three.js in projects, understanding basic principles and application scenarios of WebGL",
            "percentage": 70,
            "keywords": ["Three.js", "WebGL", "3D Visualization", "Babylon.js"]
          },
          { 
            "name": "Extension & Plugin Development", 
            "level": "Proficient",
            "description": "Capable of developing VSCode plugins, Figma extensions, and browser extensions",
            "percentage": 75,
            "keywords": ["VSCode Plugins", "Figma Extensions", "Browser Extensions"]
          },
          { 
            "name": "Progressive Web Apps (PWA)", 
            "level": "Proficient",
            "description": "Implemented offline caching, push notifications, and other PWA features to enhance web application usability and user experience",
            "percentage": 75,
            "keywords": ["Service Worker", "Cache Strategies", "Push Notifications", "Installation Experience"]
          }
        ]
      }
    ]
  },
  "experiences": [
    {
      "id": 1,
      "company": "Beijing LingYue Technology",
      "position": "Architect",
      "location": "Beijing",
      "period": "Mar 2019 - Present",
      "description": "Leading frontend architecture design and performance optimization for complex systems based on React and Vue tech stacks, leading the frontend team to promote technology upgrades and standardization, designing and developing highly reusable component libraries and toolchains to improve development efficiency.",
      "modules": [
        {
          "id": "module-1",
          "title": "Business System Development",
          "type": "module",
          "children": [
            {
              "id": "project-oa",
              "name": "OA System and Derivative Product Line",
              "period": "Mar 2020 - Present",
              "position": "Architect",
              "type": "project",
              "children": [
                {
                  "id": "subproject-oa-domestic",
                  "name": "Domestic Version (React)",
                  "type": "subproject",
                  "background": "High-performance OA system frontend development based on React, Webpack (production), Vite (local development), WebSocket, Ant Design (antd), i18next, Redux, Redux-Saga",
                  "stars": [
                    {
                      "id": "star-101",
                      "title": "Form Performance Optimization",
                      "situation": "The core module of the system has a large form (over 1000 lines), with serious initial rendering time (about 3 seconds), affecting user operation efficiency.",
                      "task": "Control form rendering time within 1 second.",
                      "action": "Researched and selected virtual list and image/component lazy loading technology; used React Profiler to precisely locate rendering bottlenecks; refactored form components to implement on-demand rendering; used react-lazy-with-preload instead of native React.lazy to implement route component preloading, solving the problem of slow loading when visiting pages for the first time.",
                      "result": "Average rendering time of large forms was reduced from 3 seconds to 800 milliseconds, a 73% performance improvement; component route switching time was reduced by 40%, and user feedback indicated a significant improvement in operation smoothness."
                    },
                    {
                      "id": "star-102",
                      "title": "Multi-language Support Solution",
                      "situation": "Business expansion required support for multilingual environments, and the existing architecture lacked internationalization support.",
                      "task": "Design and implement a robust, easily extensible multilingual solution.",
                      "action": "Introduced i18next library, built a JSON-based dynamic language package on-demand loading mechanism; configured fallback mechanism to ensure default language text is automatically displayed when specific language translations are missing, avoiding blank interfaces; localized formats such as dates and currencies, while monitoring in real time the fallback triggers in the code to ensure translation coverage.",
                      "result": "Successfully supported 4 languages, reduced interface display errors caused by missing translations by 95%; the monitoring system achieved 99% accuracy, identified and fixed 200+ potential translation issues in advance, ensuring basic user experience for global users."
                    },
                    {
                      "id": "star-103",
                      "title": "Workspace Map Configuration Process Optimization",
                      "situation": "The original workspace map configuration process was cumbersome (admin creates floor plan and Excel diagram -> UI design -> frontend development), taking up to 4 person-days (2 days for design + 2 days for frontend) for each configuration.",
                      "task": "Optimize the workspace map configuration process step by step, improve configuration efficiency, and lower technical barriers.",
                      "action": "Phase 1: Developed a Figma plugin to replace the manual calculation of coordinates in Excel, allowing designers to directly mark workstations in the design draft, with the plugin automatically extracting coordinates to generate configurations, saving frontend development time. Phase 2: Built a complete visual configuration tool, enabling administrative staff to draw and configure workspace maps directly on the platform without relying on design and development.",
                      "result": "The workspace map configuration process was reduced from \"admin (floor plan + Excel diagram 0.5 person-day) + design (2 person-days) + frontend (2 person-days)\" first to \"admin (0.5 person-day) + design (2 person-days) + frontend (0.5 person-day)\", then to \"admin staff visual configuration (0.5 person-day)\", reducing the total project time from 4.5 person-days to 0.5 person-day, with a significant decrease in configuration error rate."
                    },
                    {
                      "id": "star-104",
                      "title": "WebSocket Real-time Function Optimization",
                      "situation": "WebSocket long connections had intermittent disconnection and high latency issues in complex network environments, affecting real-time functions.",
                      "task": "Improve the stability and efficiency of WebSocket communication, and expand its practical application scenarios.",
                      "action": "Implemented exponential backoff automatic reconnection strategy; used MessagePack for binary compression of transmitted data; added heartbeat detection and timeout handling mechanisms on both client and server sides; implemented two core application scenarios: 1) Backend real-time push of message notifications and task changes; 2) Data refresh mechanism for all online users when frontend creates/edits core configurations.",
                      "result": "Average message delay reduced by 40%, bandwidth usage reduced by 25%; WebSocket connection success rate stabilized above 99.5%; data synchronization delay reduced from an average of 30 seconds (previously requiring manual refresh by users) to 2 seconds (automatic update push), real-time function complaint rate decreased by 80%."
                    },
                    {
                      "id": "star-105",
                      "title": "Frontend Security Enhancement",
                      "situation": "The OA system involves sensitive data, requiring enhanced frontend security protection capabilities.",
                      "task": "Identify and fix potential frontend security vulnerabilities, establish security specifications.",
                      "action": "Implemented strict Content Security Policy (CSP) to defend against XSS attacks; performed HTML entity escaping and type validation for all user inputs; introduced CSRF Token mechanism to prevent cross-site request forgery; developed dynamic watermark function to automatically generate semi-transparent watermarks containing user ID and login time on sensitive pages, preventing information leakage and screenshot dissemination; conducted regular security scans and code audits.",
                      "result": "Passed third-party security penetration testing, frontend security risk score improved by 85%, no high-risk vulnerabilities found; watermark function effectively reduced the risk of sensitive information leakage, information security incidents reduced by 70%."
                    },
                    {
                      "id": "star-106",
                      "title": "Build Optimization and Development Experience Improvement",
                      "situation": "As project complexity increased, Webpack build time became too long (over 5 minutes), and local development hot update (HMR) was slow.",
                      "task": "Shorten production build time, improve local development efficiency.",
                      "action": "Optimized Webpack configuration: enabled tree-shaking, code-splitting; used thread-loader or parallel-webpack for multi-core parallel compilation; switched local development server to Vite, leveraging its fast cold start and HMR capabilities based on native ESM.",
                      "result": "Production environment build time shortened by 35%; local development startup time shortened by 90%."
                    },
                    {
                      "id": "star-107",
                      "title": "Performance Monitoring System Setup",
                      "situation": "Lacked systematic frontend performance monitoring, making it difficult to proactively discover and locate online performance issues.",
                      "task": "Set up a frontend performance monitoring system to quantify user experience.",
                      "action": "Integrated Sentry for error monitoring and Session Replay for user behavior playback; reported Web Vitals (LCP, FID, CLS) and custom business metrics to Grafana, establishing a visualization monitoring dashboard.",
                      "result": "Achieved real-time monitoring of key page performance metrics (such as FMP P95), keeping them stable within 3.5 seconds, with the proportion of proactively discovered and resolved performance issues increasing by 60%."
                    }
                  ]
                },
                {
                  "id": "subproject-oa-wechat",
                  "name": "WeChat Work Application",
                  "type": "subproject",
                  "background": "Cross-platform application design and development supporting PC Web and WeChat Work mobile platforms",
                  "stars": [
                    {
                      "id": "star-108",
                      "title": "Cross-platform Technical Architecture Design",
                      "situation": "The company needed to develop an application system that supports both PC Web and WeChat Work mobile platforms.",
                      "task": "Design and build a highly reusable cross-platform technical architecture from scratch.",
                      "action": "Adopted pnpm to implement Monorepo architecture for multi-package project management; built technology stack based on React, UMI, Tailwind CSS, react-query, Zustand; established strict cross-platform component design specifications and ESLint rules for enforcement from the beginning of the project; extracted and standardized over 30 cross-platform business Hooks and 10+ responsive public UI components, published to internal npm.",
                      "result": "Successfully achieved 70% code reuse of core business logic and UI components between PC and mobile platforms, shortened average development cycle for new features by 30%, achieved high degree of code reuse, reduced development workload by 40%, improved code consistency and maintainability."
                    },
                    {
                      "id": "star-109",
                      "title": "Mobile Performance Optimization",
                      "situation": "Some pages (especially in mobile weak network environments) had long white screen time during first load.",
                      "task": "Optimize page loading performance, reduce white screen time.",
                      "action": "Utilized react-query's cache and background update mechanism to implement data preloading and state maintenance; optimized code splitting strategy, loading non-critical resources on demand; made reasonable use of HTTP caching (Cache-Control, ETag).",
                      "result": "Average white screen time of key pages reduced by 50%, Grafana monitoring showed data loading P95 time reduced by 35%."
                    }
                  ]
                },
                {
                  "id": "subproject-oa-indonesia",
                  "name": "Indonesian Version (Vue)",
                  "type": "subproject",
                  "background": "Rapid development of localized OA system for the Indonesian market",
                  "stars": [
                    {
                      "id": "star-110",
                      "title": "Rapid Localization Development",
                      "situation": "Needed to launch an OA system for the Indonesian market in a short time, with similar functionality but requiring localization adaptation.",
                      "task": "Quickly complete the development and localization of the Indonesian version using Vue technology stack, based on experience from the domestic React version.",
                      "action": "Adopted Vue 2, Webpack, Ant Design Vue (antdv) technology stack; reused design and architectural ideas from the domestic version; focused on developing date and number formatting components that conform to Indonesian user habits; encapsulated antdv rich text editor components based on tiptap to meet business requirements.",
                      "result": "Successfully launched the Indonesian version of the OA system within 2 months, with rich text editing module development efficiency improved by 65% compared to using native tiptap directly."
                    },
                    {
                      "id": "star-111",
                      "title": "Indonesian Network Environment Optimization",
                      "situation": "Indonesia's local network infrastructure was relatively weak, resulting in slow access speeds.",
                      "task": "Perform specialized performance optimization for the Indonesian network environment.",
                      "action": "Implemented comprehensive network transmission optimization: enabled HTTP/2 protocol; inlined critical CSS, asynchronously loaded non-first-screen CSS; adopted responsive images (srcset) and WebP format; configured CDN for global acceleration and edge caching.",
                      "result": "First meaningful paint (FMP) time for Indonesian users accessing the system was reduced from an average of 3.5 seconds to 1.2 seconds, a 60% performance improvement; tested with BrowserStack to ensure 99% compatibility on local mainstream browsers (Chrome, Firefox, UC Browser)."
                    }
                  ]
                },
                {
                  "id": "subproject-oa-upgrade",
                  "name": "Frontend Engineering System Upgrade",
                  "type": "subproject",
                  "background": "Refactoring the system architecture to improve module independence and reusability, supporting rapid iteration of various product lines",
                  "stars": [
                    {
                      "id": "star-112",
                      "title": "Monorepo Architecture Refactoring",
                      "situation": "As business developed, multiple management systems (OMS, KMG, etc.) emerged, with high coupling between systems, making independent iteration and deployment difficult.",
                      "task": "Refactor the system architecture to improve module independence and reusability, supporting rapid iteration of various product lines.",
                      "action": "Split previously coupled OA and its derivative projects into a Monorepo architecture based on turborepo + pnpm, with each project deployed independently; extracted common parts of OA as shared modules for cross-project sharing, using turborepo's efficient caching mechanism to reduce build time; created base projects (oa-next/oms-next/kmg-next), building new UI based on the self-developed Slimfit component library.",
                      "result": "Average project build time shortened by 50%, product lines can iterate and release independently, shared module changes automatically synchronize to dependent projects, reducing maintenance costs."
                    },
                    {
                      "id": "star-113",
                      "title": "Micro-frontend Progressive Migration",
                      "situation": "Needed to complete system upgrades without interrupting business operations.",
                      "task": "Design a progressive migration plan to ensure smooth transition.",
                      "action": "Adopted qiankun micro-frontend framework to run new and old systems in parallel; introduced old OA/OMS/KMG pages in new base projects, gradually replacing core modules according to business priorities; designed universal micro-frontend communication mechanisms to ensure cross-application data consistency.",
                      "result": "Successfully achieved progressive migration, with system performance improved by 40% and frontend development efficiency improved by 30% after the new architecture went online."
                    },
                    {
                      "id": "star-114",
                      "title": "Technical Debt Cleanup",
                      "situation": "The old system had accumulated a large amount of technical debt, resulting in high maintenance costs and slow feature iteration.",
                      "task": "Systematically clean up technical debt, improve code quality and maintainability.",
                      "action": "Cleaned up multiple versions of component libraries coexisting in the old OA, unified to the Slimfit component library; refactored chaotic permission verification logic, centralizing scattered permission judgments; upgraded the permission judgment system, adding support for data permission points and role judgment capabilities; wrote automated scripts to batch replace old permission judgment code.",
                      "result": "Code repository size reduced by 30%, component call consistency improved by 90%, permission judgment logic errors reduced by 85%, time for developers to understand and modify permission-related code shortened by 70%."
                    }
                  ]
                }
              ]
            },
            {
              "id": "project-wp",
              "name": "WP Series Projects",
              "position": "Lead Developer",
              "period": "Jan 2022 - Present",
              "type": "project",
              "background": "Complex graphic display and editing functionality developed based on React, UMI, Tailwind CSS",
              "stars": [
                {
                  "id": "star-120",
                  "title": "High-performance Graphic Rendering",
                  "situation": "The project needed to develop complex parking space maps, warehouse position maps and other graphical configuration interfaces, requiring high-performance rendering and interaction.",
                  "task": "Implement high-performance, configurable graphic display and editing functions.",
                  "action": "Developed based on React, UMI, Tailwind CSS; reused and extended the Pixi.js-based graphic rendering engine experience from the OA project, optimizing rendering performance with large amounts of data.",
                  "result": "Successfully delivered parking space map and warehouse position map configuration functions, supporting smooth display and interaction of 1000+ graphic elements."
                },
                {
                  "id": "star-121",
                  "title": "Complex Interaction Optimization",
                  "situation": "The graphical editing interface needed to support complex interactions such as box selection and dragging of large-scale elements, with high performance requirements.",
                  "task": "Implement high-performance box selection and multi-element operation functions.",
                  "action": "Optimized the box selection algorithm, using requestAnimationFrame to throttle redraw operations; batch processed and asynchronized large-scale element operations to avoid blocking the UI thread.",
                  "result": "Implemented a smooth box selection experience, supporting simultaneous operation of 1000+ elements, improving user operation efficiency by 50%, with Grafana monitoring showing interaction response time P95 stable within 200 milliseconds."
                }
              ]
            },
            {
              "id": "project-finance",
              "name": "Capital/Financial/Risk Control Systems",
              "position": "Project Manager",
              "period": "Jun 2019 - Dec 2021",
              "type": "project",
              "background": "Building capital, financial and risk control systems that meet financial business requirements from scratch",
              "stars": [
                {
                  "id": "star-130",
                  "title": "Financial Application Security Development",
                  "situation": "The company needed to build a set of capital, financial and risk control systems from scratch to meet financial business requirements.",
                  "task": "As project manager, lead the technology selection, architecture design and core function development of the system frontend.",
                  "action": "Determined to use Vue 2 and internal Base-UI component library as the basic technology stack; followed frontend security best practices (input validation, output encoding, HTTPS, etc.) for development.",
                  "result": "The system successfully went online on schedule, passed internal security department audit, met financial-grade application security requirements, and had no major security incidents within 1 year after going online."
                },
                {
                  "id": "star-131",
                  "title": "Component Library Migration Tool",
                  "situation": "Company technology stack upgrade required migrating old system UI from Base-UI to the new standard component library @yqg/antd.",
                  "task": "Complete UI component library migration work efficiently and accurately.",
                  "action": "Analyzed API differences between the two component libraries, developed code conversion tools based on AST (Abstract Syntax Tree) to automatically identify and replace old component usage with new component API calls.",
                  "result": "Tools automated completion of over 80% of page migration workload, overall migration cycle shortened by 50%, reducing a large amount of repetitive manual operations."
                },
                {
                  "id": "star-132",
                  "title": "Business Component Encapsulation",
                  "situation": "The system contained a large number of structurally similar CRUD pages, with development efficiency needing improvement.",
                  "task": "Improve development efficiency and performance of basic pages.",
                  "action": "Encapsulated page-level business components (such as search forms, data tables, dialog forms), standardized development processes.",
                  "result": "Basic CRUD page development efficiency improved by 50%, core report page loading and interaction performance improved by 35%."
                }
              ]
            }
          ]
        },
        {
          "id": "module-2",
          "title": "Infrastructure Construction",
          "type": "module",
          "children": [
            {
              "id": "project-slimfit",
              "name": "Slimfit Component Library",
              "position": "Architect",
              "period": "Apr 2023 - Present",
              "type": "project",
              "background": "Design and implementation of the company's new generation standard React component library",
              "stars": [
                {
                  "id": "star-140",
                  "title": "Unified Design Specification",
                  "situation": "The company's multiple B-end products had inconsistent UI styles, components were repeatedly developed, and maintenance costs were high.",
                  "task": "Lead the construction of the company's new generation standard React component library Slimfit, unifying design specifications.",
                  "action": "Used father 4 (based on Rollup) for component packaging, used dumi 2 to build component documentation and example website; based on Ant Design (antd) for secondary packaging and self-development, producing 40+ high-quality UI components.",
                  "result": "Slimfit became the standard component library for the company's B-end product line, effectively unifying product visual styles and improving brand consistency."
                },
                {
                  "id": "star-141",
                  "title": "Component Quality Assurance",
                  "situation": "Need to ensure the quality and performance of the component library.",
                  "task": "Establish a comprehensive component quality assurance system.",
                  "action": "Integrated Vitest for unit testing and snapshot testing; configured Grafana to monitor component rendering performance in actual projects (such as first rendering time, update time).",
                  "result": "Core component unit test coverage reached over 70%, performance monitoring identified and optimized rendering bottlenecks in 3 components, with average rendering performance P95 time reduced by 40%."
                }
              ]
            },
            {
              "id": "project-baseui",
              "name": "Base-UI Component Library",
              "position": "Core Developer",
              "period": "Jan 2019 - May 2021",
              "type": "project",
              "background": "Participated in the construction of the company's first generation Vue 2 component library",
              "stars": [
                {
                  "id": "star-150",
                  "title": "High-performance Component Development",
                  "situation": "Early Vue projects lacked high-quality, high-performance basic components such as charts and selectors.",
                  "task": "As a core developer, participate in the construction of the company's first generation Vue 2 component library Base-UI.",
                  "action": "Responsible for developing row/column freezing functionality for tables; used virtual list technology to optimize the performance of components such as Select and TreeSelect when processing large amounts of data.",
                  "result": "Successfully encapsulated 50+ UI components, with component reuse rate in internal company projects reaching 60%, Select and other components supporting smooth rendering of over 10,000 records, performance improved by 200%."
                },
                {
                  "id": "star-151",
                  "title": "Packaging Optimization",
                  "situation": "The component library used Webpack for packaging, resulting in large bundle size and slow loading.",
                  "task": "Optimize the packaging method of the component library to reduce size and improve loading performance.",
                  "action": "Switched packaging tool from Webpack to Rollup, leveraging its good support for ES Module and better tree-shaking effect; configured output in multiple module formats (ESM, CJS).",
                  "result": "Overall component library packaging size reduced by 15%, on-demand loading effect improved, first screen loading speed of projects using the library improved by an average of 30%."
                }
              ]
            }
          ]
        },
        {
          "id": "module-3",
          "title": "Engineering Efficiency Improvement",
          "type": "module",
          "children": [
            {
              "id": "project-cli",
              "name": "CLI Tools and Build Optimization",
              "type": "project",
              "stars": [
                {
                  "id": "star-160",
                  "title": "Internal CLI Tool Development",
                  "situation": "Project initialization configuration was cumbersome, local development environment startup was slow, and Webpack build configuration was complex.",
                  "task": "Improve frontend engineering efficiency and developer experience.",
                  "action": "Developed internal CLI tool (Franky CLI), providing standardized project templates (React/Vue/Node); deeply optimized Webpack build configuration (cache, DllPlugin, etc.); introduced and promoted new generation build tools such as Vite and esbuild.",
                  "result": "New project initialization time reduced from 30 minutes to 5 minutes; local development server startup time reduced by an average of 70%; developer satisfaction with engineering toolchain improved by 50%."
                },
                {
                  "id": "star-161",
                  "title": "New Employee Onboarding Optimization",
                  "situation": "After joining project teams, new employees took a long time to familiarize themselves with project technology stacks and development processes.",
                  "task": "Optimize the onboarding and start-up experience for new employees.",
                  "action": "Systematically organized technical documentation for various project teams, supplemented missing content; wrote onboarding guides for new employees, including environment configuration, development processes, and common issues.",
                  "result": "Average time for new employees to independently take on development tasks reduced from 2 weeks to 3 days."
                }
              ]
            },
            {
              "id": "project-figma",
              "name": "Figma Extension Development",
              "type": "project",
              "stars": [
                {
                  "id": "star-170",
                  "title": "Design-to-Code Tool",
                  "situation": "Design drafts delivered by designers needed to be manually converted to code or configuration by frontend engineers, which was inefficient and error-prone.",
                  "task": "Automate the conversion process from design drafts to code/configuration.",
                  "action": "Developed Figma plugin to enable one-click extraction of design draft elements (such as layers, styles) and conversion to scene configuration JSON needed by Pixi.js or basic React/Vue component code.",
                  "result": "Development efficiency for specific scenarios (such as Pixi.js configuration generation) improved by 100%, design draft fidelity improved by 40%."
                }
              ]
            },
            {
              "id": "project-devtools",
              "name": "Development Toolchain",
              "type": "project",
              "stars": [
                {
                  "id": "star-180",
                  "title": "ESLint Custom Plugin",
                  "situation": "Team code specification execution was inconsistent, and potential performance and security risks were difficult to discover through general rules.",
                  "task": "Strengthen code specification checking, improve code quality and security.",
                  "action": "Developed custom ESLint plugin, including 10+ rules targeted at the company's business characteristics and technology stack, to detect potential performance bottlenecks (such as unreasonable loops, repeated calculations), security vulnerabilities (such as improper use of dangerouslySetInnerHTML), and best practice violations.",
                  "result": "The number of code issues discovered and fixed in advance through custom rules increased by 60%, security risks introduced by code reduced by 50%."
                },
                {
                  "id": "star-181",
                  "title": "VS Code Plugin Development",
                  "situation": "Daily development involved many repetitive operations and information lookup needs.",
                  "task": "Develop VS Code plugins to improve development efficiency and convenience.",
                  "action": "Developed Franky (VS Code plugin): Built-in 20+ common business code snippets and page templates, supporting Tailwind CSS class name smart prompts and conversion, automatic generation of file header comments; Developed WebBar (VS Code plugin): Added custom buttons to the status bar for one-click jumping to common internal systems or documentation; Developed CodeTransformer (VS Code plugin): Integrated Babel plugin capabilities, supporting quick code refactoring and conversion within the editor, supporting project dependency graph visualization analysis.",
                  "result": "Developers' daily coding efficiency improved by an average of 45%, specific code refactoring task speed improved by 50%."
                },
                {
                  "id": "star-182", 
                  "title": "Code Migration Tool",
                  "situation": "Facing large-scale technology stack upgrades or code repository refactoring (such as Vue 2 to Vue 3, old API replacement), manual migration workload was huge and error-prone.",
                  "task": "Develop automated tools to assist code migration.",
                  "action": "Developed code static analysis and automatic conversion tools based on Babel and jscodeshift; wrote codemod scripts for specific migration scenarios.",
                  "result": "In multiple code migration projects, automated tools improved migration efficiency by an average of 400%, bugs introduced by migration reduced by 90%."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "id": 2,
      "company": "Previous Company",
      "position": "Senior Frontend Developer",
      "location": "Beijing",
      "period": "Jun 2016 - Feb 2019",
      "description": "Responsible for frontend architecture design and technology selection, leading the development of multiple business systems, participating in component library construction and engineering optimization.",
      "projects": [
        {
          "id": 201,
          "name": "Internal Tool Development",
          "period": "Mar 2017 - Dec 2018",
          "background": "Developing tool chains to improve team development efficiency",
          "type": "project",
          "stars": [
            {
              "id": "star-201",
              "situation": "Development process contained a lot of repetitive work, project initialization configuration was cumbersome, and local development environment startup was slow.",
              "task": "Improve frontend engineering efficiency and developer experience.",
              "action": "Developed internal CLI tools, providing standardized project templates; deeply optimized Webpack build configuration; developed VSCode plugin with built-in common business code snippets and page templates, supporting smart prompts and conversion.",
              "result": "New project initialization time reduced from 30 minutes to 5 minutes; local development server startup time reduced by an average of 70%; developers' daily coding efficiency improved by an average of 45%."
            }
          ]
        },
        {
          "id": 202,
          "name": "Component Library Development",
          "period": "Aug 2016 - May 2018",
          "background": "Participated in designing and developing the company's basic UI component library",
          "type": "project",
          "stars": [
            {
              "id": "star-202",
              "situation": "Early projects lacked high-quality, high-performance basic components such as charts and selectors.",
              "task": "Participate in the construction of the company's UI component library, providing high-performance components.",
              "action": "Responsible for developing row/column freezing functionality for tables; used virtual list technology to optimize the performance of components such as Select, TreeSelect when processing large amounts of data; switched packaging tool from Webpack to Rollup, leveraging its good support for ES Module and better tree-shaking effect.",
              "result": "Successfully encapsulated 50+ UI components, with component reuse rate in internal company projects reaching 60%; Select and other components supporting smooth rendering of over 10,000 records, performance improved by 200%; overall component library packaging size reduced by 15%."
            }
          ]
        }
      ]
    }
  ],
  "education": [
    {
      "id": 1,
      "degree": "Bachelor's Degree",
      "field": "Agricultural Resources and Environment",
      "institution": "Jilin University",
      "location": "Jilin",
      "period": "Sep 2010 - Jul 2014",
      "description": "Systematically studied professional knowledge related to agricultural resources and environment, while self-learning programming technologies that laid the foundation for later transition to frontend development.",
      "achievements": [
        "Graduated with honors",
        "Self-taught frontend development technologies during university",
        "Participated in student scientific innovation projects"
      ]
    }
  ],
  "portfolioProjects": [
    {
      "id": 1,
      "title": "Frontend Weekly",
      "description": "AI-powered frontend technology newsletter that curates and provides in-depth analysis of high-quality content from the Web frontend ecosystem and related fields. Covers practical tools, open-source projects, cutting-edge news, and best practices using advanced AI technology for intelligent analysis and filtering.",
      "image": "/placeholder.svg",
      "technologies": ["Astro", "React", "OpenAI", "Tailwind CSS", "Vercel"],
      "techIds": ["astro", "react", "openai", "tailwind", "vercel"],
      "liveLink": "https://weekly.mengpeng.tech",
      "repoLink": "https://github.com/NorthSeacoder/weekly",
      "featured": true,
      "evolution": ["Manual Content Curation", "AI-Assisted Filtering", "Fully AI-Driven Process"],
      "related": [4, 5]
    },
    {
      "id": 2,
      "title": "@nsea/xmind-handler",
      "description": "Node.js-based utility library for efficiently processing XMind files. Supports filtering topics by markers, converting content to JSON, Markdown, or streamlined XMind formats. Implements a command-line interface for simplified user operations and supports multiple output formats, greatly improving the efficiency of mind map content processing and conversion.",
      "image": "/placeholder.svg",
      "technologies": ["Node.js", "TypeScript", "CLI", "XMind SDK"],
      "techIds": ["nodejs", "typescript", "cli", "xmind"],
      "liveLink": "https://www.npmjs.com/package/@nsea/xmind-handler",
      "repoLink": "https://github.com/NorthSeacoder/xmind-handler",
      "featured": true,
      "evolution": ["Basic Parsing Functions", "Multi-format Conversion", "Command Line Tools"],
      "related": [7, 3]
    },
    {
      "id": 3,
      "title": "@codetransformer/find-chinese",
      "description": "CodeTransformer plugin that efficiently queries all Chinese characters in target folders and their dependent files. Successfully implemented comprehensive scanning of complex project structures, providing precise character location and statistical functions, significantly improved code review and internationalization work efficiency, saving over 30% of time. Widely used in multilingual support and internationalization projects.",
      "image": "/placeholder.svg",
      "technologies": ["TypeScript", "AST", "Babel", "VSCode API"],
      "techIds": ["typescript", "ast", "babel", "vscode"],
      "liveLink": "",
      "repoLink": "https://github.com/NorthSeacoder/find-chinese",
      "featured": true,
      "evolution": ["Basic Scanning", "Dependency Tracking", "Statistical Analysis"],
      "related": [6, 7]
    },
    {
      "id": 4,
      "title": "Franky (VSCode)",
      "description": "Powerful developer productivity VSCode extension that supports dynamic template generation, offering 20+ business templates to streamline code writing workflows. Includes Tailwind CSS class name conversion and automatic file header comment generation without additional configuration. Particularly effective for accelerating development in React, Vue, and other frontend projects.",
      "image": "/placeholder.svg",
      "technologies": ["TypeScript", "VSCode API", "Template Engine", "Tailwind CSS"],
      "techIds": ["typescript", "vscode", "template", "tailwind"],
      "liveLink": "",
      "repoLink": "https://github.com/NorthSeacoder/franky",
      "featured": true,
      "evolution": ["Basic Code Snippets", "Template System", "Intelligent Assistance"],
      "related": [5, 6]
    },
    {
      "id": 5,
      "title": "WebBar (VSCode)",
      "description": "Lightweight VSCode extension that adds customizable buttons to the status bar for quick access to frequently used websites, enhancing development convenience. The fully configurable button system allows developers to rapidly access documentation, management systems, test environments, and other common resources, reducing context switching costs in the workflow.",
      "image": "/placeholder.svg",
      "technologies": ["TypeScript", "VSCode API", "WebView"],
      "techIds": ["typescript", "vscode", "webview"],
      "liveLink": "",
      "repoLink": "https://github.com/NorthSeacoder/web-bar",
      "featured": false,
      "evolution": ["Fixed Links", "Custom Configuration", "Context Awareness"],
      "related": [4, 6]
    },
    {
      "id": 6,
      "title": "CodeTransformer (VSCode)",
      "description": "Sophisticated code transformation VSCode extension that provides support for official Babel plugins and custom plugins, optimizing code refactoring workflows with a 50% efficiency improvement. Features the ability to search target files or folder dependencies, recursively build dependency graphs, and combine tsconfig paths to ensure complete migration with no omissions. Particularly powerful for large-scale project refactoring, making it an invaluable tool for team technology upgrades.",
      "image": "/placeholder.svg",
      "technologies": ["TypeScript", "Babel", "AST", "Dependency Analysis"],
      "techIds": ["typescript", "babel", "ast", "dependency-analysis"],
      "liveLink": "",
      "repoLink": "https://github.com/NorthSeacoder/code-transformer",
      "featured": true,
      "evolution": ["Basic Transformation", "Dependency Tracking", "Intelligent Refactoring"],
      "related": [3, 7]
    },
    {
      "id": 7,
      "title": "@nsea/depseeker",
      "description": "Professional Node.js dependency analysis tool for rapidly scanning and analyzing project dependency relationships. Capable of recursively building dependency graphs, supporting complex dependency resolution, and identifying circular dependencies and potential issues. Compatible with ES modules and CommonJS modules, providing accurate dependency graph analysis in conjunction with tsconfig path mapping. An ideal tool for large-scale project refactoring and code optimization.",
      "image": "/placeholder.svg",
      "technologies": ["Node.js", "TypeScript", "Dependency Analysis", "AST"],
      "techIds": ["nodejs", "typescript", "dependency-analysis", "ast"],
      "liveLink": "https://www.npmjs.com/package/@nsea/depseeker",
      "repoLink": "https://github.com/NorthSeacoder/depseeker",
      "featured": true,
      "evolution": ["Simple Dependency Resolution", "Circular Dependency Detection", "Complex Project Support"],
      "related": [2, 6]
    }
  ]
} 