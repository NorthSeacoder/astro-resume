{
  "about": {
    "bio": "拥有8年前端开发经验与4年团队管理经验，专注于中后台系统架构设计与工程化建设，主导10余个大型中后台系统的开发与重构。带领3-5人前端团队，负责技术方案选型、代码质量管控与团队技术培养，提升团队人均开发效率40%。推动前端技术栈升级与标准化，擅长构建高复用性组件库与工具链，确保项目交付的高效性与可维护性。",
    "stats": {
      "yearsExperience": 8,
      "projectsCompleted": 20,
      "happyClients": 15,
      "yearsDescription": "前端开发与团队管理经验",
      "projectsDescription": "大型中后台系统开发",
      "clientsDescription": "跨行业客户合作"
    },
    "keyPoints": [
      "拥有8年前端开发经验与4年团队管理经验，专注于中后台系统架构设计与工程化建设，主导10余个大型中后台系统的开发与重构。",
      "带领3-5人前端团队，负责技术方案选型、代码质量管控与团队技术培养，提升团队人均开发效率40%。",
      "推动前端技术栈升级与标准化，擅长构建高复用性组件库与工具链，确保项目交付的高效性与可维护性。"
    ]
  },
  "skills": {
    "categories": [
      {
        "id": 1,
        "name": "前端基础技术",
        "icon": "Code",
        "skills": [
          { 
            "name": "JavaScript/TypeScript", 
            "level": "Expert",
            "description": "具有丰富的JavaScript (ES6+)、CSS3和HTML5开发经验，深入理解TypeScript类型系统，在大型项目中实践类型安全的架构设计",
            "percentage": 95,
            "keywords": ["ES6+", "TypeScript", "HTML5", "CSS3"]
          },
          { 
            "name": "React生态", 
            "level": "Expert",
            "description": "深入理解React核心原理及生态系统，包括Hooks、Redux、React Router，擅长处理大型表单性能优化、组件按需渲染等复杂场景",
            "percentage": 95,
            "keywords": ["React", "Hooks", "Redux", "性能优化"]
          },
          { 
            "name": "Vue生态", 
            "level": "Expert",
            "description": "熟练掌握Vue 2/3，包括Vuex、Vue Router、Composition API，有Vue组件库开发和维护经验，具备Vue性能优化实践经验",
            "percentage": 90,
            "keywords": ["Vue", "Vuex", "Vue Router", "组件库"]
          },
          { 
            "name": "性能与网络", 
            "level": "Expert",
            "description": "深入理解浏览器渲染机制、V8引擎优化，具备复杂Web应用性能优化经验，包括资源加载、渲染性能、网络传输等多个层面",
            "percentage": 90,
            "keywords": ["性能优化", "浏览器原理", "HTTP优化", "资源加载"]
          },
          { 
            "name": "UI组件开发", 
            "level": "Expert",
            "description": "主导开发多个企业级组件库，包括基于antd的二次开发和自研组件，擅长高性能表格、虚拟列表等复杂组件的设计与实现",
            "percentage": 90,
            "keywords": ["组件库", "antd", "性能组件", "设计系统"]
          }
        ]
      },
      {
        "id": 2,
        "name": "工程化体系",
        "icon": "Zap",
        "skills": [
          { 
            "name": "构建与优化", 
            "level": "Expert",
            "description": "熟练使用Webpack、Vite、Rollup等构建工具，具备丰富的构建性能优化经验，包括分包策略、缓存优化、多进程构建等",
            "percentage": 95,
            "keywords": ["Webpack", "Vite", "Rollup", "构建优化"]
          },
          { 
            "name": "工程化工具链", 
            "level": "Expert",
            "description": "设计并实现完整的前端工程化体系，包括CLI工具、代码规范、自动化测试、CI/CD流程，有效提升团队开发效率",
            "percentage": 90,
            "keywords": ["CLI", "ESLint", "自动化测试", "CI/CD"]
          },
          { 
            "name": "Monorepo工程", 
            "level": "Expert",
            "description": "基于pnpm和turborepo构建大型前端项目工程体系，实现高效的多包管理、依赖共享和构建优化",
            "percentage": 90,
            "keywords": ["Monorepo", "pnpm", "turborepo", "工程化"]
          },
          { 
            "name": "微前端架构", 
            "level": "Advanced",
            "description": "设计并实施基于qiankun的微前端解决方案，解决大型应用的解耦和协同开发问题，实现渐进式技术栈升级",
            "percentage": 85,
            "keywords": ["微前端", "qiankun", "应用集成", "技术升级"]
          },
          { 
            "name": "自动化工具开发", 
            "level": "Expert",
            "description": "开发VSCode插件、Figma插件等提效工具，设计AST代码转换工具，有效提升开发效率和代码质量",
            "percentage": 90,
            "keywords": ["VSCode插件", "Figma插件", "AST", "代码转换"]
          }
        ]
      },
      {
        "id": 3,
        "name": "专业领域技术",
        "icon": "BrainCircuit",
        "skills": [
          { 
            "name": "企业微信应用开发", 
            "level": "Expert",
            "description": "深入理解企业微信应用开发体系，包括JSSDK、小程序、H5应用等多端开发，擅长处理鉴权、离线存储、原生交互等复杂场景",
            "percentage": 90,
            "keywords": ["企业微信JSSDK", "小程序", "H5应用", "多端开发"]
          },
          { 
            "name": "数据可视化", 
            "level": "Advanced",
            "description": "熟练使用ECharts和Pixi.js实现复杂的数据可视化和图形编辑功能，包括大规模数据渲染、自定义图表、交互优化等",
            "percentage": 85,
            "keywords": ["ECharts", "Pixi.js", "图形渲染", "交互设计"]
          },
          { 
            "name": "国际化体系", 
            "level": "Expert",
            "description": "设计并实现完整的前端国际化解决方案，包括多语言管理、文案维护、动态语言包加载、本地化适配等",
            "percentage": 90,
            "keywords": ["i18next", "多语言", "本地化", "文案管理"]
          },
          { 
            "name": "前端监控", 
            "level": "Advanced",
            "description": "构建前端性能监控体系，包括错误监控、性能指标采集、用户行为分析，实现问题的及时发现和诊断",
            "percentage": 85,
            "keywords": ["性能监控", "错误追踪", "用户行为", "监控告警"]
          }
        ]
      }
    ]
  },
  "experiences": [
    {
      "id": 1,
      "company": "北京瓴岳科技",
      "position": "架构师",
      "location": "北京",
      "period": "2019年3月 - 至今",
      "description": "负责基于React和Vue技术栈的复杂系统前端架构设计与性能优化，带领前端团队推动技术升级与规范化，设计开发高复用性组件库与工具链以提升开发效率。",
      "items": [
        {
          "id": "oa-1",
          "title": "国内OA（React）",
          "type": "OA系统及衍生产品线",
          "period": "2020年3月 - 至今",
          "position": "架构师",
          "summary": "基于React、Webpack、Vite、WebSocket、Ant Design、i18next、Redux、Redux-Saga的高性能OA系统前端开发，主导性能优化与国际化、可视化配置、WebSocket优化、安全加固、构建优化、性能监控等。",
          "achievements": [
            { "id": "star-101", "title": "表单性能优化", "situation": "系统核心模块存在大型表单（超过1000行），初始渲染时间严重（约3秒），影响用户操作效率。", "task": "将表单渲染时间控制在1秒内。", "action": "调研并选型虚拟列表和图片/组件懒加载技术；使用React Profiler精准定位渲染瓶颈；重构表单组件实现按需渲染；使用react-lazy-with-preload代替原生React.lazy实现路由组件预加载，解决首次访问页面加载缓慢问题。", "result": "大型表单平均渲染时间从3秒降至800毫秒，性能提升73%；组件路由切换时间降低40%，用户反馈操作流畅度显著提高。" },
            { "id": "star-102", "title": "多语言支持方案", "situation": "业务拓展需要支持多语言环境，现有架构缺乏国际化支持能力。", "task": "设计并实现稳健、易扩展的多语言解决方案。", "action": "引入i18next库，构建基于JSON的动态语言包按需加载机制；配置fallback机制确保在特定语言翻译缺失时自动显示默认语言文本，避免界面出现空白；对日期、货币等格式进行本地化处理，同时实时监控代码中fallback触发情况，保证翻译覆盖率。", "result": "成功支持4种语言，因翻译缺失导致的界面显示错误减少95%；监控系统准确率达99%，提前发现并修复200+潜在翻译问题，保障全球用户基础使用体验。" },
            { "id": "star-103", "title": "工位图配置流程优化", "situation": "原有工位图配置流程繁琐（行政人员提供平面图和Excel表格 -> UI设计 -> 前端开发），每次配置耗时达4人日（设计2天+前端2天）。", "task": "分步骤优化工位图配置流程，提高配置效率，降低技术门槛。", "action": "第一阶段：开发Figma插件替代Excel表格手工计算坐标，设计师直接在设计稿中标记工位点，插件自动提取坐标生成配置，节省前端开发时间；第二阶段：构建完整可视化配置工具，使行政人员能直接在平台上绘制和配置工位图，不再依赖设计和开发。", "result": "工位图配置流程从\"行政（平面图+Excel表格0.5人日）+ 设计（2人日）+ 前端（2人日）\"先降至\"行政（0.5人日）+ 设计（2人日）+ 前端（0.5人日）\"，再降至\"行政人员可视化配置（0.5人日）\"，项目总耗时从4.5人日降至0.5人日，配置错误率显著下降。" },
            { "id": "star-104", "title": "WebSocket实时功能优化", "situation": "WebSocket长连接在复杂网络环境下存在断连和高延迟问题，影响实时功能体验。", "task": "提高WebSocket通信稳定性和效率，扩展其实际应用场景。", "action": "实现指数退避自动重连策略；使用MessagePack对传输数据进行二进制压缩；在客户端和服务端都增加心跳检测和超时处理机制；落地两个核心应用场景：1）后端实时推送消息通知和任务变更；2）前端创建/编辑核心配置时触发所有在线用户数据刷新机制。", "result": "平均消息延迟降低40%，带宽使用降低25%；WebSocket连接成功率稳定在99.5%以上；数据同步延迟从平均30秒（原需用户手动刷新）降至2秒（自动更新推送），实时功能投诉率降低80%。" },
            { "id": "star-105", "title": "前端安全增强", "situation": "OA系统涉及敏感数据，需要增强前端安全防护能力。", "task": "识别并修复潜在前端安全漏洞，建立安全规范。", "action": "实施严格的Content Security Policy(CSP)防御XSS攻击；对所有用户输入进行HTML实体转义和类型校验；引入CSRF Token机制防止跨站请求伪造；开发动态水印功能，在敏感页面自动生成包含用户ID和登录时间的半透明水印，防止信息泄露和截图传播；定期进行安全扫描和代码审计。", "result": "通过第三方安全渗透测试，前端安全风险评分提升85%，未发现高风险漏洞；水印功能有效降低敏感信息泄露风险，信息安全事件减少70%。" },
            { "id": "star-106", "title": "构建优化与开发体验提升", "situation": "随着项目复杂度增加，Webpack构建时间过长（超过5分钟），本地开发热更新(HMR)缓慢。", "task": "缩短生产环境构建时间，提高本地开发效率。", "action": "优化Webpack配置：启用tree-shaking、代码拆分；使用thread-loader或parallel-webpack进行多核并行编译；本地开发服务器切换为Vite，利用其基于原生ESM的快速冷启动和HMR能力。", "result": "生产环境构建时间缩短35%；本地开发启动时间缩短90%。" },
            { "id": "star-107", "title": "性能监控体系搭建", "situation": "缺乏系统性前端性能监控，难以主动发现和定位线上性能问题。", "task": "搭建前端性能监控体系，量化用户体验。", "action": "集成Sentry进行错误监控和Session Replay用户行为回放；将Web Vitals指标（LCP、FID、CLS）和自定义业务指标上报至Grafana，建立可视化监控面板。", "result": "实现关键页面性能指标（如FMP P95）实时监控，稳定控制在3.5秒内，主动发现并解决的性能问题比例提升60%。" }
          ]
        },
        {
          "id": "oa-2",
          "title": "企业微信应用",
          "type": "OA系统及衍生产品线",
          "period": "",
          "position": "前端负责人",
          "summary": "同时支持PC Web与企业微信移动端的跨平台应用设计开发，主导跨端架构、性能优化与代码复用。",
          "achievements": [
            { "id": "star-108", "title": "跨平台技术架构设计", "situation": "公司需要开发同时支持PC Web和企业微信移动端的应用系统。", "task": "从零设计构建高复用性的跨平台技术架构。", "action": "采用pnpm实现Monorepo架构进行多包项目管理；基于React、UMI、Tailwind CSS、react-query、Zustand构建技术栈；从项目一开始就建立严格的跨平台组件设计规范和ESLint规则强制执行；提取并规范化30+跨平台业务Hooks和10+响应式公共UI组件，发布至内部npm。", "result": "成功实现PC与移动端之间70%核心业务逻辑和UI组件代码复用，新功能平均开发周期缩短30%，达到高度代码复用，减少40%开发工作量，提高代码一致性和可维护性。" },
            { "id": "star-109", "title": "移动端性能优化", "situation": "部分页面（尤其在移动弱网环境下）首次加载白屏时间长。", "task": "优化页面加载性能，减少白屏时间。", "action": "利用react-query的缓存和后台更新机制实现数据预加载和状态保持；优化代码分割策略，按需加载非关键资源；合理利用HTTP缓存（Cache-Control、ETag）。", "result": "关键页面平均白屏时间降低50%，Grafana监控显示数据加载P95时间降低35%。" }
          ]
        },
        {
          "id": "oa-3",
          "title": "印尼OA（Vue）",
          "type": "OA系统及衍生产品线",
          "period": "",
          "position": "Vue技术专家",
          "summary": "快速开发针对印尼市场的本地化OA系统，聚焦本地化适配与网络性能优化。",
          "achievements": [
            { "id": "star-110", "title": "快速本地化开发", "situation": "需要在短时间内为印尼市场推出OA系统，功能上与国内版相似但需要进行本地化适配。", "task": "基于国内React版经验，使用Vue技术栈快速完成印尼版的开发和本地化工作。", "action": "采用Vue 2、Webpack、Ant Design Vue(antdv)技术栈；复用国内版的设计和架构思路；重点开发符合印尼用户习惯的日期和数字格式化组件；基于tiptap封装antdv富文本编辑器组件满足业务需求。", "result": "在2个月内成功上线印尼版OA系统，富文本编辑模块开发效率相比直接使用原生tiptap提升65%。" },
            { "id": "star-111", "title": "印尼网络环境优化", "situation": "印尼当地网络基础设施相对薄弱，导致访问速度慢。", "task": "针对印尼网络环境进行专项性能优化。", "action": "实施全面网络传输优化：启用HTTP/2协议；内联关键CSS，异步加载非首屏CSS；采用响应式图片(srcset)和WebP格式；配置CDN全球加速和边缘缓存。", "result": "印尼用户访问系统的首次有效绘制（FMP）时间从平均3.5秒降至1.2秒，性能提升60%；通过BrowserStack测试确保在当地主流浏览器（Chrome、Firefox、UC Browser）上99%兼容性。" }
          ]
        },
        {
          "id": "oa-4",
          "title": "前端工程体系升级",
          "type": "OA系统及衍生产品线",
          "period": "",
          "position": "架构师",
          "summary": "重构系统架构以提高模块独立性和复用性，支持各产品线快速迭代，主导Monorepo、微前端、技术债务清理等。",
          "achievements": [
            { "id": "star-112", "title": "Monorepo架构重构", "situation": "随着业务发展，出现多个管理系统（OMS、KMG等），系统之间耦合度高，难以独立迭代和部署。", "task": "重构系统架构，提高模块独立性和复用性，支持各产品线快速迭代。", "action": "将原先耦合的OA及其衍生项目拆分为基于turborepo+pnpm的Monorepo架构，各项目独立部署；抽取OA中的公共部分作为共享模块供跨项目共享，利用turborepo高效缓存机制减少构建时间；创建基础项目（oa-next/oms-next/kmg-next），基于自研Slimfit组件库构建新UI。", "result": "平均项目构建时间缩短50%，各产品线可独立迭代发布，共享模块变更自动同步至依赖项目，降低维护成本。" },
            { "id": "star-113", "title": "微前端渐进式迁移", "situation": "需要在不中断业务运行的情况下完成系统升级。", "task": "设计渐进式迁移方案，确保平滑过渡。", "action": "采用qiankun微前端框架实现新旧系统并行运行；在新基础项目中引入旧OA/OMS/KMG页面，按业务优先级逐步替换核心模块；设计通用微前端通信机制确保跨应用数据一致性。", "result": "成功实现渐进式迁移，新架构上线后系统性能提升40%，前端开发效率提升30%。" },
            { "id": "star-114", "title": "技术债务清理", "situation": "旧系统积累了大量技术债务，导致维护成本高，功能迭代缓慢。", "task": "系统性清理技术债务，提高代码质量和可维护性。", "action": "清理旧OA中多个版本组件库共存的情况，统一到Slimfit组件库；重构混乱的权限校验逻辑，集中管理分散的权限判断；升级权限判断体系，增加数据权限点和角色判断能力支持；编写自动化脚本批量替换旧权限判断代码。", "result": "代码仓库体积减少30%，组件调用一致性提高90%，权限判断逻辑错误减少85%，开发人员理解和修改权限相关代码的时间缩短70%。" }
          ]
        },
        {
          "id": "wp-1",
          "title": "WP系列项目",
          "period": "2022年1月 - 至今",
          "position": "技术负责人",
          "summary": "基于React、UMI、Tailwind CSS开发的复杂图形显示与编辑功能，主导高性能渲染、复杂交互与组件复用。",
          "achievements": [
            { "id": "star-120", "title": "高性能图形渲染", "situation": "项目需要开发停车位地图、仓位图等复杂图形配置界面，要求高性能渲染和交互。", "task": "实现高性能、可配置的图形显示和编辑功能。", "action": "基于React、UMI、Tailwind CSS开发；复用并扩展OA项目中基于Pixi.js的图形渲染引擎经验，优化大数据量下的渲染性能。", "result": "成功交付停车位地图和仓位图配置功能，支持1000+图形元素的流畅显示和交互。" },
            { "id": "star-121", "title": "复杂交互优化", "situation": "图形编辑界面需要支持框选和拖拽大规模元素等复杂交互，性能要求高。", "task": "实现高性能框选和多元素操作功能。", "action": "优化框选算法，使用requestAnimationFrame节流重绘操作；对大规模元素操作进行批处理和异步化，避免阻塞UI线程。", "result": "实现流畅的框选体验，支持同时操作1000+元素，用户操作效率提升50%，Grafana监控显示交互响应时间P95稳定在200毫秒内。" }
          ]
        },
        {
          "id": "fin-1",
          "title": "资金/财务/风控系统",
          "period": "2019年6月 - 2021年12月",
          "position": "项目经理",
          "summary": "从零构建满足金融业务需求的资金、财务和风控系统，主导前端架构、组件迁移与业务组件封装。",
          "achievements": [
            { "id": "star-130", "title": "金融应用安全开发", "situation": "公司需要从零构建一套资金、财务和风控系统，满足金融业务需求。", "task": "作为项目经理，主导系统前端的技术选型、架构设计和核心功能开发。", "action": "确定使用Vue 2和内部Base-UI组件库作为基础技术栈；遵循前端安全最佳实践（输入验证、输出编码、HTTPS等）进行开发。", "result": "系统按计划成功上线，通过内部安全部门审核，满足金融级应用安全要求，上线后1年内无重大安全事件。" },
            { "id": "star-131", "title": "组件库迁移工具", "situation": "公司技术栈升级需要将旧系统UI从Base-UI迁移到新标准组件库@yqg/antd。", "task": "高效准确完成UI组件库迁移工作。", "action": "分析两个组件库的API差异，开发基于AST（抽象语法树）的代码转换工具，自动识别并替换旧组件用法为新组件API调用。", "result": "工具自动完成80%以上页面迁移工作量，整体迁移周期缩短50%，减少大量重复手工操作。" },
            { "id": "star-132", "title": "业务组件封装", "situation": "系统中存在大量结构相似的CRUD页面，开发效率需要提升。", "task": "提高基础页面的开发效率和性能。", "action": "封装页面级业务组件（如搜索表单、数据表格、弹窗表单），规范化开发流程。", "result": "基础CRUD页面开发效率提升50%，核心报表页面加载和交互性能提升35%。" }
          ]
        }
      ]
    },
    {
      "id": 3,
      "company": "房天下",
      "position": "主程/前端开发",
      "location": "北京",
      "period": "2017年11月 - 2019年3月",
      "description": "独立负责三房活动、拿地助手、城市地图等项目的前端开发与优化，主导项目构建、页面开发与数据可视化。",
      "items": [
        {
          "id": "fang-1",
          "title": "三房活动",
          "period": "2017年11月 - 2019年3月",
          "position": "主程",
          "summary": "独立负责项目构建，集成Webpack打包与Babel编译，优化构建流程，提升开发效率20%。采用Express框架开发Web层Controller，设计并实现稳定高效的接口服务。使用Vue与Vue-router构建前端页面，实现动态路由与流畅交互，提升用户体验。",
          "achievements": [
            {
              "id": "fang-1-1",
              "title": "构建流程优化",
              "situation": "项目初期构建流程复杂，影响开发效率。",
              "task": "优化前端构建流程，提升开发效率。",
              "action": "集成Webpack打包与Babel编译，梳理并优化构建脚本。",
              "result": "开发效率提升20%，构建流程更为稳定高效。"
            },
            {
              "id": "fang-1-2",
              "title": "高效接口服务设计",
              "situation": "需要稳定高效的Web层接口支撑活动业务。",
              "task": "设计并实现高效的接口服务。",
              "action": "采用Express框架开发Web层Controller，优化接口结构和性能。",
              "result": "接口服务稳定，支撑高并发业务需求。"
            }
          ]
        },
        {
          "id": "fang-2",
          "title": "拿地助手",
          "period": "2017年11月 - 2019年3月",
          "position": "前端开发",
          "summary": "负责土地与位置搜索条件页开发，利用localStorage实现搜索记录持久化，提升用户操作便捷性。基于Element-UI封装条件区组件，标准化交互逻辑，加快页面开发速度30%。集成高德地图API与ECharts，开发结果展示页，支持数据可视化与地理信息精准呈现。",
          "achievements": [
            {
              "id": "fang-2-1",
              "title": "用户体验提升",
              "situation": "用户需频繁切换和保存搜索条件。",
              "task": "提升搜索条件页的便捷性。",
              "action": "利用localStorage实现搜索记录持久化，优化交互。",
              "result": "用户操作便捷性显著提升，获得业务好评。"
            },
            {
              "id": "fang-2-2",
              "title": "组件标准化与开发提效",
              "situation": "页面开发周期长，组件复用性低。",
              "task": "提升页面开发效率。",
              "action": "基于Element-UI封装条件区组件，标准化交互逻辑。",
              "result": "页面开发速度提升30%，组件复用性增强。"
            }
          ]
        },
        {
          "id": "fang-3",
          "title": "城市地图",
          "period": "2017年11月 - 2019年3月",
          "position": "前端开发",
          "summary": "主导经济、人口、潜客大数据页面及后台接口开发，初期基于jQuery实现交互逻辑，确保页面功能稳定。集成极海地图与ECharts，完成数据可视化展示，满足业务多维度分析需求。中期引入Vue框架，开发投资立项通用条件组件及报告中心PPT下载模块，提升复用性与功能扩展性。后期采用Express框架构建Web层Controller，实现Excel文件上传与下载功能，优化数据处理效率。",
          "achievements": [
            {
              "id": "fang-3-1",
              "title": "多维数据可视化",
              "situation": "需展示经济、人口等多维大数据。",
              "task": "实现高效的数据可视化展示。",
              "action": "集成极海地图与ECharts，开发多维度数据可视化页面。",
              "result": "满足业务多维度分析需求，提升数据洞察力。"
            },
            {
              "id": "fang-3-2",
              "title": "通用组件与自动化提升",
              "situation": "页面功能扩展性和数据处理效率需提升。",
              "task": "提升页面复用性和数据处理自动化。",
              "action": "引入Vue框架，开发通用条件组件和PPT下载模块，采用Express实现Excel上传下载。",
              "result": "页面复用性增强，数据处理效率大幅提升。"
            }
          ]
        }
      ]
    },
    {
      "id": 4,
      "company": "深圳市天蓝色软件服务有限公司",
      "position": "Java开发+全干工程师",
      "location": "深圳",
      "period": "2016年7月 - 2017年9月",
      "description": "主要负责SaaS项目的二次开发，涵盖Java后端与前端全栈开发。",
      "items": [
        {
          "id": "tl-1",
          "title": "SaaS项目二次开发",
          "period": "2016年7月 - 2017年9月",
          "position": "Java开发+全干工程师",
          "summary": "主要做一些二次开发的SaaS项目，涉及Java后端开发与前端页面实现，提升项目交付效率。",
          "achievements": []
        }
      ]
    },
    {
      "id": 5,
      "company": "海澜集团",
      "position": "职业店长/区域主管",
      "location": "无锡",
      "period": "2014年7月 - 2016年5月",
      "description": "市场部管理岗，负责全国出差及新店开业前期工作，后晋升为区域主管。",
      "items": [
        {
          "id": "hl-1",
          "title": "进销存计算应用",
          "period": "2015年10月 - 2016年4月",
          "position": "开发者",
          "summary": "使用Java+JSP开发的内部进销存计算应用，解决门店卖场数据与仓库数据区分问题。门店原有后台系统仅提供整店数据，无法区分卖场与仓库数据。应用通过扫码枪数据自动化计算进销存，替代原有的手动登记与计算流程，提高了数据准确性与工作效率。",
          "achievements": [
            {
              "id": "hl-1-1",
              "title": "进销存自动化",
              "situation": "门店收货后有后台管理系统，总部发货会主动推送，但这是整店数据，无法区分卖场与仓库数据。原流程需每次取货手动登记种类，每晚手动计算进销存。",
              "task": "开发一个能区分卖场与仓库数据的进销存系统，自动化计算流程。",
              "action": "使用Java+JSP开发Web应用，设计数据库存储取货记录，实现与扫码枪的数据接口，每晚自动读取扫码枪数据并生成进销存报表。",
              "result": "取货后仅需扫码即可，无需手动登记，系统每晚自动生成进销存报表，工作效率提升60%，数据准确率提高90%，为门店管理提供了更精准的决策依据。"
            }
          ]
        },
        {
          "id": "hl-2",
          "title": "开店日程管理应用",
          "period": "2015年5月 - 2015年9月",
          "position": "开发者",
          "summary": "基于Java+JSP开发的新店开业日程管理应用，取代以往依靠经验与个人笔记的管理方式。系统根据预计到店时间和开业时间，自动计算两个月内每天/每周/每月的必要事项，并按重要性和紧急性分为四个象限展示，支持任务完成标记与进度追踪，全面提升了新店筹备效率。",
          "achievements": [
            {
              "id": "hl-2-1",
              "title": "开店流程系统化",
              "situation": "新店开业事项管理主要依靠经验或个人笔记，缺乏系统化与标准化，容易遗漏关键事项。",
              "task": "开发一个日程管理应用，实现新店开业流程的系统化与可视化管理。",
              "action": "基于Java+JSP开发Web应用，采用四象限模式（重要/紧急）展示任务，输入预计到店和开业时间后，系统自动计算两个月内的日/周/月任务，并提供任务标记完成功能。",
              "result": "系统成功应用于15家新店开业，平均开店准备时间缩短20%，任务遗漏率降低80%，培训新店长时间缩短50%，个人职业发展上在不到两年时间内晋升为区域主管。"
            }
          ]
        }
      ]
    }
  ],
  "education": [
    {
      "id": 1,
      "degree": "学士学位",
      "field": "农业资源与环境",
      "institution": "吉林大学",
      "location": "吉林",
      "period": "2010年9月 - 2014年7月",
      "description": "系统学习农业资源与环境相关专业知识，并自学编程技术，为后续转型前端开发奠定基础。",
      "achievements": [
        "以优异成绩毕业",
        "在校期间自学前端开发技术",
        "参与学生科技创新项目"
      ]
    }
  ],
  "portfolioProjects": [
    {
      "id": 1,
      "title": "我不知道的周刊",
      "description": "AI驱动的前端技术周刊，精选并深度解读Web前端及周边生态的优质内容，涵盖实用工具、开源项目、前沿资讯与最佳实践。采用AI技术智能分析与筛选内容，让开发者持续获取高质量的前端资讯，提升专业素养和技术视野。",
      "image": "/placeholder.svg",
      "technologies": ["Astro", "React", "OpenAI", "Tailwind CSS", "Vercel"],
      "techIds": ["astro", "react", "openai", "tailwind", "vercel"],
      "liveLink": "https://weekly.mengpeng.tech",
      "repoLink": "https://github.com/NorthSeacoder/weekly",
      "featured": true,
      "evolution": ["内容手动整理", "AI辅助筛选", "全流程AI驱动"],
      "related": [4]
    },
    {
      "id": 2,
      "title": "@nsea/xmind-handler",
      "description": "基于Node.js的工具库，用于高效处理XMind文件。支持根据标记过滤主题、将内容转换为JSON、Markdown或精简XMind文件等多种格式。实现了命令行接口简化用户操作，支持多种输出格式，大幅提升思维导图内容处理和转换的效率。",
      "image": "/placeholder.svg",
      "technologies": ["Node.js", "TypeScript", "CLI", "XMind SDK"],
      "techIds": ["nodejs", "typescript", "cli", "xmind"],
      "liveLink": "https://www.npmjs.com/package/@nsea/xmind-handler",
      "repoLink": "https://github.com/NorthSeacoder/xmind-handler",
      "featured": true,
      "evolution": ["基础解析功能", "多格式转换", "命令行工具"],
      "related": [4]
    },
    {
      "id": 3,
      "title": "@codetransformer/find-chinese",
      "description": "高效查询目标文件夹及其依赖文件中所有中文字符的CodeTransformer插件。实现了对复杂项目结构的全面扫描，提供精准的字符定位和统计功能，显著提升了代码审查和国际化工作效率，节省超过30%的时间。广泛应用于多语言支持和国际化项目中。",
      "image": "/placeholder.svg",
      "technologies": ["TypeScript", "AST", "Babel", "VSCode API"],
      "techIds": ["typescript", "ast", "babel", "vscode"],
      "liveLink": "https://www.npmjs.com/package/@codetransformer/find-chinese",
      "repoLink": "https://github.com/NorthSeacoder/find-chinese",
      "featured": true,
      "evolution": ["基础扫描", "依赖追踪", "统计分析"],
      "related": [4,6,7]
    },
    {
      "id": 4,
      "title": "Franky (VSCode)",
      "description": "高效开发者工具VSCode扩展，支持动态模板生成，提供20多个业务模板，简化代码编写流程。支持Tailwindcss类名转换，自动生成文件头注释，无需额外配置，提高日常开发效率。特别适合React、Vue等前端项目快速开发。",
      "image": "/placeholder.svg",
      "technologies": ["TypeScript", "VSCode API", "Template Engine", "Tailwind CSS"],
      "techIds": ["typescript", "vscode", "template", "tailwind"],
      "liveLink": "https://marketplace.visualstudio.com/items?itemName=NorthSeacoder.franky",
      "repoLink": "https://github.com/NorthSeacoder/franky",
      "featured": true,
      "evolution": ["基础代码片段", "模板系统", "智能化辅助"],
      "related": [7]
    },
    {
      "id": 5,
      "title": "WebBar (VSCode)",
      "description": "轻量级便捷工具VSCode扩展，在状态栏中添加可自定义按钮，方便一键访问常用网页，提升开发便捷性。完全可配置的按钮系统让开发者能快速访问文档、管理系统、测试环境等常用资源，减少工作流中的上下文切换成本。",
      "image": "/placeholder.svg",
      "technologies": ["TypeScript", "VSCode API", "WebView"],
      "techIds": ["typescript", "vscode", "webview"],
      "liveLink": "https://marketplace.visualstudio.com/items?itemName=NorthSeacoder.webbar",
      "repoLink": "https://github.com/NorthSeacoder/web-bar",
      "featured": false,
      "evolution": ["固定链接", "自定义配置", "上下文感知"],
      "related": [4]
    },
    {
      "id": 6,
      "title": "CodeTransformer (VSCode)",
      "description": "强大的代码转换VSCode插件，提供官方babel-plugin及自定义plugin支持，优化代码重构流程，代码重构效率提升50%。支持搜索目标文件或文件夹依赖，递归构建依赖图谱，结合tsconfig path拼接路径，确保迁移无遗漏。在大型项目重构中表现尤为突出，是团队技术升级的得力助手。",
      "image": "/placeholder.svg",
      "technologies": ["TypeScript", "Babel", "AST", "依赖分析"],
      "techIds": ["typescript", "babel", "ast", "dependency-analysis"],
      "liveLink": "https://marketplace.visualstudio.com/items?itemName=NorthSeacoder.codetransformer",
      "repoLink": "https://github.com/NorthSeacoder/code-transformer",
      "featured": true,
      "evolution": ["基础转换", "依赖追踪", "智能重构"],
      "related": [3, 7]
    },
    {
      "id": 7,
      "title": "@nsea/depseeker",
      "description": "专业的Node.js依赖分析工具，用于快速扫描和分析项目依赖关系。能够递归构建依赖图谱，支持复杂依赖解析，识别循环依赖和潜在问题。支持ES模块和CommonJS模块，结合tsconfig路径映射提供准确的依赖图分析，是大型项目重构和代码优化的理想工具。",
      "image": "/placeholder.svg",
      "technologies": ["Node.js", "TypeScript", "依赖分析", "AST"],
      "techIds": ["nodejs", "typescript", "dependency-analysis", "ast"],
      "liveLink": "https://www.npmjs.com/package/@nsea/depseeker",
      "repoLink": "https://github.com/NorthSeacoder/depseeker",
      "featured": true,
      "evolution": ["简单依赖解析", "循环依赖检测", "复杂项目支持"],
      "related": [2, 6]
    }
  ]
} 
